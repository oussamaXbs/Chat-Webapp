name: CI/CD for Azure VM Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH client
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Copy application files to Azure VM
        run: |
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "mkdir -p ~/Chat-Webapp"
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" scp -o StrictHostKeyChecking=no -r * ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:~/Chat-Webapp/

      - name: Deploy application on Azure VM
        run: |
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          # Check if the Flask server is running and kill it
          if pgrep -f "flask run" > /dev/null; then
              echo "Stopping existing Flask server..."
              pkill -f "flask run" || true  # Ignore error if no process is found
              sleep 2
          else
              echo "No Flask server running."
          fi

          # Navigate to the application directory and install dependencies
          cd ~/Chat-Webapp
          pip install --user -r requirements.txt

          # Start the Flask application in the background
          nohup flask run --host=0.0.0.0 > flask.log 2>&1 &
          EOF
